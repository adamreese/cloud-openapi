/*
Fermyon Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_openapi

import (
	"encoding/json"
)

// checks if the CreateTokenCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTokenCommand{}

// CreateTokenCommand struct for CreateTokenCommand
type CreateTokenCommand struct {
	ProviderCode *string `json:"providerCode,omitempty"`
	ClientId *string `json:"clientId,omitempty"`
	Provider *AccountProvider `json:"provider,omitempty"`
	IsMarketingEmailOn *bool `json:"isMarketingEmailOn,omitempty"`
}

// NewCreateTokenCommand instantiates a new CreateTokenCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTokenCommand() *CreateTokenCommand {
	this := CreateTokenCommand{}
	return &this
}

// NewCreateTokenCommandWithDefaults instantiates a new CreateTokenCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTokenCommandWithDefaults() *CreateTokenCommand {
	this := CreateTokenCommand{}
	return &this
}

// GetProviderCode returns the ProviderCode field value if set, zero value otherwise.
func (o *CreateTokenCommand) GetProviderCode() string {
	if o == nil || IsNil(o.ProviderCode) {
		var ret string
		return ret
	}
	return *o.ProviderCode
}

// GetProviderCodeOk returns a tuple with the ProviderCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTokenCommand) GetProviderCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderCode) {
		return nil, false
	}
	return o.ProviderCode, true
}

// HasProviderCode returns a boolean if a field has been set.
func (o *CreateTokenCommand) HasProviderCode() bool {
	if o != nil && !IsNil(o.ProviderCode) {
		return true
	}

	return false
}

// SetProviderCode gets a reference to the given string and assigns it to the ProviderCode field.
func (o *CreateTokenCommand) SetProviderCode(v string) {
	o.ProviderCode = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *CreateTokenCommand) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTokenCommand) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *CreateTokenCommand) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *CreateTokenCommand) SetClientId(v string) {
	o.ClientId = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *CreateTokenCommand) GetProvider() AccountProvider {
	if o == nil || IsNil(o.Provider) {
		var ret AccountProvider
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTokenCommand) GetProviderOk() (*AccountProvider, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *CreateTokenCommand) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given AccountProvider and assigns it to the Provider field.
func (o *CreateTokenCommand) SetProvider(v AccountProvider) {
	o.Provider = &v
}

// GetIsMarketingEmailOn returns the IsMarketingEmailOn field value if set, zero value otherwise.
func (o *CreateTokenCommand) GetIsMarketingEmailOn() bool {
	if o == nil || IsNil(o.IsMarketingEmailOn) {
		var ret bool
		return ret
	}
	return *o.IsMarketingEmailOn
}

// GetIsMarketingEmailOnOk returns a tuple with the IsMarketingEmailOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTokenCommand) GetIsMarketingEmailOnOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMarketingEmailOn) {
		return nil, false
	}
	return o.IsMarketingEmailOn, true
}

// HasIsMarketingEmailOn returns a boolean if a field has been set.
func (o *CreateTokenCommand) HasIsMarketingEmailOn() bool {
	if o != nil && !IsNil(o.IsMarketingEmailOn) {
		return true
	}

	return false
}

// SetIsMarketingEmailOn gets a reference to the given bool and assigns it to the IsMarketingEmailOn field.
func (o *CreateTokenCommand) SetIsMarketingEmailOn(v bool) {
	o.IsMarketingEmailOn = &v
}

func (o CreateTokenCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTokenCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProviderCode) {
		toSerialize["providerCode"] = o.ProviderCode
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.IsMarketingEmailOn) {
		toSerialize["isMarketingEmailOn"] = o.IsMarketingEmailOn
	}
	return toSerialize, nil
}

type NullableCreateTokenCommand struct {
	value *CreateTokenCommand
	isSet bool
}

func (v NullableCreateTokenCommand) Get() *CreateTokenCommand {
	return v.value
}

func (v *NullableCreateTokenCommand) Set(val *CreateTokenCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTokenCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTokenCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTokenCommand(val *CreateTokenCommand) *NullableCreateTokenCommand {
	return &NullableCreateTokenCommand{value: val, isSet: true}
}

func (v NullableCreateTokenCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTokenCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


