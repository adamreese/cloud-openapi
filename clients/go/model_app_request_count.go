/*
Fermyon Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_openapi

import (
	"encoding/json"
)

// checks if the AppRequestCount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppRequestCount{}

// AppRequestCount struct for AppRequestCount
type AppRequestCount struct {
	Start int64 `json:"start"`
	End int64 `json:"end"`
	Interval int32 `json:"interval"`
	Total int64 `json:"total"`
	AveragePerSecond float64 `json:"averagePerSecond"`
	Points []AppRequestPoint `json:"points"`
}

// NewAppRequestCount instantiates a new AppRequestCount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppRequestCount(start int64, end int64, interval int32, total int64, averagePerSecond float64, points []AppRequestPoint) *AppRequestCount {
	this := AppRequestCount{}
	this.Start = start
	this.End = end
	this.Interval = interval
	this.Total = total
	this.AveragePerSecond = averagePerSecond
	this.Points = points
	return &this
}

// NewAppRequestCountWithDefaults instantiates a new AppRequestCount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRequestCountWithDefaults() *AppRequestCount {
	this := AppRequestCount{}
	return &this
}

// GetStart returns the Start field value
func (o *AppRequestCount) GetStart() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *AppRequestCount) GetStartOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *AppRequestCount) SetStart(v int64) {
	o.Start = v
}

// GetEnd returns the End field value
func (o *AppRequestCount) GetEnd() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *AppRequestCount) GetEndOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.End, true
}

// SetEnd sets field value
func (o *AppRequestCount) SetEnd(v int64) {
	o.End = v
}

// GetInterval returns the Interval field value
func (o *AppRequestCount) GetInterval() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value
// and a boolean to check if the value has been set.
func (o *AppRequestCount) GetIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interval, true
}

// SetInterval sets field value
func (o *AppRequestCount) SetInterval(v int32) {
	o.Interval = v
}

// GetTotal returns the Total field value
func (o *AppRequestCount) GetTotal() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *AppRequestCount) GetTotalOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *AppRequestCount) SetTotal(v int64) {
	o.Total = v
}

// GetAveragePerSecond returns the AveragePerSecond field value
func (o *AppRequestCount) GetAveragePerSecond() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.AveragePerSecond
}

// GetAveragePerSecondOk returns a tuple with the AveragePerSecond field value
// and a boolean to check if the value has been set.
func (o *AppRequestCount) GetAveragePerSecondOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AveragePerSecond, true
}

// SetAveragePerSecond sets field value
func (o *AppRequestCount) SetAveragePerSecond(v float64) {
	o.AveragePerSecond = v
}

// GetPoints returns the Points field value
func (o *AppRequestCount) GetPoints() []AppRequestPoint {
	if o == nil {
		var ret []AppRequestPoint
		return ret
	}

	return o.Points
}

// GetPointsOk returns a tuple with the Points field value
// and a boolean to check if the value has been set.
func (o *AppRequestCount) GetPointsOk() ([]AppRequestPoint, bool) {
	if o == nil {
		return nil, false
	}
	return o.Points, true
}

// SetPoints sets field value
func (o *AppRequestCount) SetPoints(v []AppRequestPoint) {
	o.Points = v
}

func (o AppRequestCount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppRequestCount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["start"] = o.Start
	toSerialize["end"] = o.End
	toSerialize["interval"] = o.Interval
	toSerialize["total"] = o.Total
	toSerialize["averagePerSecond"] = o.AveragePerSecond
	toSerialize["points"] = o.Points
	return toSerialize, nil
}

type NullableAppRequestCount struct {
	value *AppRequestCount
	isSet bool
}

func (v NullableAppRequestCount) Get() *AppRequestCount {
	return v.value
}

func (v *NullableAppRequestCount) Set(val *AppRequestCount) {
	v.value = val
	v.isSet = true
}

func (v NullableAppRequestCount) IsSet() bool {
	return v.isSet
}

func (v *NullableAppRequestCount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppRequestCount(val *AppRequestCount) *NullableAppRequestCount {
	return &NullableAppRequestCount{value: val, isSet: true}
}

func (v NullableAppRequestCount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppRequestCount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


