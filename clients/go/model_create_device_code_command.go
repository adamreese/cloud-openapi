/*
Fermyon Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_openapi

import (
	"encoding/json"
)

// checks if the CreateDeviceCodeCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDeviceCodeCommand{}

// CreateDeviceCodeCommand struct for CreateDeviceCodeCommand
type CreateDeviceCodeCommand struct {
	ClientId string `json:"clientId"`
}

// NewCreateDeviceCodeCommand instantiates a new CreateDeviceCodeCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDeviceCodeCommand(clientId string) *CreateDeviceCodeCommand {
	this := CreateDeviceCodeCommand{}
	this.ClientId = clientId
	return &this
}

// NewCreateDeviceCodeCommandWithDefaults instantiates a new CreateDeviceCodeCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDeviceCodeCommandWithDefaults() *CreateDeviceCodeCommand {
	this := CreateDeviceCodeCommand{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *CreateDeviceCodeCommand) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *CreateDeviceCodeCommand) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *CreateDeviceCodeCommand) SetClientId(v string) {
	o.ClientId = v
}

func (o CreateDeviceCodeCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDeviceCodeCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["clientId"] = o.ClientId
	return toSerialize, nil
}

type NullableCreateDeviceCodeCommand struct {
	value *CreateDeviceCodeCommand
	isSet bool
}

func (v NullableCreateDeviceCodeCommand) Get() *CreateDeviceCodeCommand {
	return v.value
}

func (v *NullableCreateDeviceCodeCommand) Set(val *CreateDeviceCodeCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDeviceCodeCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDeviceCodeCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDeviceCodeCommand(val *CreateDeviceCodeCommand) *NullableCreateDeviceCodeCommand {
	return &NullableCreateDeviceCodeCommand{value: val, isSet: true}
}

func (v NullableCreateDeviceCodeCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDeviceCodeCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


