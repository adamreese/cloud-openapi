/*
Fermyon Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_openapi

import (
	"encoding/json"
)

// checks if the UpdateChannelCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateChannelCommand{}

// UpdateChannelCommand struct for UpdateChannelCommand
type UpdateChannelCommand struct {
	Id string `json:"id"`
	Name string `json:"name"`
	RevisionSelectionStrategy ChannelRevisionSelectionStrategy `json:"revisionSelectionStrategy"`
	RangeRule NullableString `json:"rangeRule,omitempty"`
	ActiveRevisionId NullableString `json:"activeRevisionId,omitempty"`
}

// NewUpdateChannelCommand instantiates a new UpdateChannelCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateChannelCommand(id string, name string, revisionSelectionStrategy ChannelRevisionSelectionStrategy) *UpdateChannelCommand {
	this := UpdateChannelCommand{}
	this.Id = id
	this.Name = name
	this.RevisionSelectionStrategy = revisionSelectionStrategy
	return &this
}

// NewUpdateChannelCommandWithDefaults instantiates a new UpdateChannelCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateChannelCommandWithDefaults() *UpdateChannelCommand {
	this := UpdateChannelCommand{}
	return &this
}

// GetId returns the Id field value
func (o *UpdateChannelCommand) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UpdateChannelCommand) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UpdateChannelCommand) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *UpdateChannelCommand) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateChannelCommand) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateChannelCommand) SetName(v string) {
	o.Name = v
}

// GetRevisionSelectionStrategy returns the RevisionSelectionStrategy field value
func (o *UpdateChannelCommand) GetRevisionSelectionStrategy() ChannelRevisionSelectionStrategy {
	if o == nil {
		var ret ChannelRevisionSelectionStrategy
		return ret
	}

	return o.RevisionSelectionStrategy
}

// GetRevisionSelectionStrategyOk returns a tuple with the RevisionSelectionStrategy field value
// and a boolean to check if the value has been set.
func (o *UpdateChannelCommand) GetRevisionSelectionStrategyOk() (*ChannelRevisionSelectionStrategy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionSelectionStrategy, true
}

// SetRevisionSelectionStrategy sets field value
func (o *UpdateChannelCommand) SetRevisionSelectionStrategy(v ChannelRevisionSelectionStrategy) {
	o.RevisionSelectionStrategy = v
}

// GetRangeRule returns the RangeRule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateChannelCommand) GetRangeRule() string {
	if o == nil || IsNil(o.RangeRule.Get()) {
		var ret string
		return ret
	}
	return *o.RangeRule.Get()
}

// GetRangeRuleOk returns a tuple with the RangeRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateChannelCommand) GetRangeRuleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RangeRule.Get(), o.RangeRule.IsSet()
}

// HasRangeRule returns a boolean if a field has been set.
func (o *UpdateChannelCommand) HasRangeRule() bool {
	if o != nil && o.RangeRule.IsSet() {
		return true
	}

	return false
}

// SetRangeRule gets a reference to the given NullableString and assigns it to the RangeRule field.
func (o *UpdateChannelCommand) SetRangeRule(v string) {
	o.RangeRule.Set(&v)
}
// SetRangeRuleNil sets the value for RangeRule to be an explicit nil
func (o *UpdateChannelCommand) SetRangeRuleNil() {
	o.RangeRule.Set(nil)
}

// UnsetRangeRule ensures that no value is present for RangeRule, not even an explicit nil
func (o *UpdateChannelCommand) UnsetRangeRule() {
	o.RangeRule.Unset()
}

// GetActiveRevisionId returns the ActiveRevisionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateChannelCommand) GetActiveRevisionId() string {
	if o == nil || IsNil(o.ActiveRevisionId.Get()) {
		var ret string
		return ret
	}
	return *o.ActiveRevisionId.Get()
}

// GetActiveRevisionIdOk returns a tuple with the ActiveRevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateChannelCommand) GetActiveRevisionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActiveRevisionId.Get(), o.ActiveRevisionId.IsSet()
}

// HasActiveRevisionId returns a boolean if a field has been set.
func (o *UpdateChannelCommand) HasActiveRevisionId() bool {
	if o != nil && o.ActiveRevisionId.IsSet() {
		return true
	}

	return false
}

// SetActiveRevisionId gets a reference to the given NullableString and assigns it to the ActiveRevisionId field.
func (o *UpdateChannelCommand) SetActiveRevisionId(v string) {
	o.ActiveRevisionId.Set(&v)
}
// SetActiveRevisionIdNil sets the value for ActiveRevisionId to be an explicit nil
func (o *UpdateChannelCommand) SetActiveRevisionIdNil() {
	o.ActiveRevisionId.Set(nil)
}

// UnsetActiveRevisionId ensures that no value is present for ActiveRevisionId, not even an explicit nil
func (o *UpdateChannelCommand) UnsetActiveRevisionId() {
	o.ActiveRevisionId.Unset()
}

func (o UpdateChannelCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateChannelCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["revisionSelectionStrategy"] = o.RevisionSelectionStrategy
	if o.RangeRule.IsSet() {
		toSerialize["rangeRule"] = o.RangeRule.Get()
	}
	if o.ActiveRevisionId.IsSet() {
		toSerialize["activeRevisionId"] = o.ActiveRevisionId.Get()
	}
	return toSerialize, nil
}

type NullableUpdateChannelCommand struct {
	value *UpdateChannelCommand
	isSet bool
}

func (v NullableUpdateChannelCommand) Get() *UpdateChannelCommand {
	return v.value
}

func (v *NullableUpdateChannelCommand) Set(val *UpdateChannelCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateChannelCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateChannelCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateChannelCommand(val *UpdateChannelCommand) *NullableUpdateChannelCommand {
	return &NullableUpdateChannelCommand{value: val, isSet: true}
}

func (v NullableUpdateChannelCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateChannelCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


