/*
Fermyon Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_openapi

import (
	"encoding/json"
)

// checks if the PaymentIntegrationUrl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentIntegrationUrl{}

// PaymentIntegrationUrl struct for PaymentIntegrationUrl
type PaymentIntegrationUrl struct {
	Url *string `json:"url,omitempty"`
}

// NewPaymentIntegrationUrl instantiates a new PaymentIntegrationUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentIntegrationUrl() *PaymentIntegrationUrl {
	this := PaymentIntegrationUrl{}
	return &this
}

// NewPaymentIntegrationUrlWithDefaults instantiates a new PaymentIntegrationUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentIntegrationUrlWithDefaults() *PaymentIntegrationUrl {
	this := PaymentIntegrationUrl{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PaymentIntegrationUrl) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentIntegrationUrl) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PaymentIntegrationUrl) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PaymentIntegrationUrl) SetUrl(v string) {
	o.Url = &v
}

func (o PaymentIntegrationUrl) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentIntegrationUrl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullablePaymentIntegrationUrl struct {
	value *PaymentIntegrationUrl
	isSet bool
}

func (v NullablePaymentIntegrationUrl) Get() *PaymentIntegrationUrl {
	return v.value
}

func (v *NullablePaymentIntegrationUrl) Set(val *PaymentIntegrationUrl) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentIntegrationUrl) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentIntegrationUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentIntegrationUrl(val *PaymentIntegrationUrl) *NullablePaymentIntegrationUrl {
	return &NullablePaymentIntegrationUrl{value: val, isSet: true}
}

func (v NullablePaymentIntegrationUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentIntegrationUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


