/*
Fermyon Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_openapi

import (
	"encoding/json"
)

// checks if the DeviceCodeDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeviceCodeDetails{}

// DeviceCodeDetails struct for DeviceCodeDetails
type DeviceCodeDetails struct {
	ClientName *string `json:"clientName,omitempty"`
}

// NewDeviceCodeDetails instantiates a new DeviceCodeDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceCodeDetails() *DeviceCodeDetails {
	this := DeviceCodeDetails{}
	return &this
}

// NewDeviceCodeDetailsWithDefaults instantiates a new DeviceCodeDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceCodeDetailsWithDefaults() *DeviceCodeDetails {
	this := DeviceCodeDetails{}
	return &this
}

// GetClientName returns the ClientName field value if set, zero value otherwise.
func (o *DeviceCodeDetails) GetClientName() string {
	if o == nil || IsNil(o.ClientName) {
		var ret string
		return ret
	}
	return *o.ClientName
}

// GetClientNameOk returns a tuple with the ClientName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCodeDetails) GetClientNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClientName) {
		return nil, false
	}
	return o.ClientName, true
}

// HasClientName returns a boolean if a field has been set.
func (o *DeviceCodeDetails) HasClientName() bool {
	if o != nil && !IsNil(o.ClientName) {
		return true
	}

	return false
}

// SetClientName gets a reference to the given string and assigns it to the ClientName field.
func (o *DeviceCodeDetails) SetClientName(v string) {
	o.ClientName = &v
}

func (o DeviceCodeDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeviceCodeDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientName) {
		toSerialize["clientName"] = o.ClientName
	}
	return toSerialize, nil
}

type NullableDeviceCodeDetails struct {
	value *DeviceCodeDetails
	isSet bool
}

func (v NullableDeviceCodeDetails) Get() *DeviceCodeDetails {
	return v.value
}

func (v *NullableDeviceCodeDetails) Set(val *DeviceCodeDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceCodeDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceCodeDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceCodeDetails(val *DeviceCodeDetails) *NullableDeviceCodeDetails {
	return &NullableDeviceCodeDetails{value: val, isSet: true}
}

func (v NullableDeviceCodeDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceCodeDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


