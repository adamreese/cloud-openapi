/*
Fermyon Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_openapi

import (
	"encoding/json"
)

// checks if the GetSqlDatabasesQuery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSqlDatabasesQuery{}

// GetSqlDatabasesQuery struct for GetSqlDatabasesQuery
type GetSqlDatabasesQuery struct {
	AppId NullableString `json:"appId,omitempty"`
}

// NewGetSqlDatabasesQuery instantiates a new GetSqlDatabasesQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSqlDatabasesQuery() *GetSqlDatabasesQuery {
	this := GetSqlDatabasesQuery{}
	return &this
}

// NewGetSqlDatabasesQueryWithDefaults instantiates a new GetSqlDatabasesQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSqlDatabasesQueryWithDefaults() *GetSqlDatabasesQuery {
	this := GetSqlDatabasesQuery{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetSqlDatabasesQuery) GetAppId() string {
	if o == nil || IsNil(o.AppId.Get()) {
		var ret string
		return ret
	}
	return *o.AppId.Get()
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetSqlDatabasesQuery) GetAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppId.Get(), o.AppId.IsSet()
}

// HasAppId returns a boolean if a field has been set.
func (o *GetSqlDatabasesQuery) HasAppId() bool {
	if o != nil && o.AppId.IsSet() {
		return true
	}

	return false
}

// SetAppId gets a reference to the given NullableString and assigns it to the AppId field.
func (o *GetSqlDatabasesQuery) SetAppId(v string) {
	o.AppId.Set(&v)
}
// SetAppIdNil sets the value for AppId to be an explicit nil
func (o *GetSqlDatabasesQuery) SetAppIdNil() {
	o.AppId.Set(nil)
}

// UnsetAppId ensures that no value is present for AppId, not even an explicit nil
func (o *GetSqlDatabasesQuery) UnsetAppId() {
	o.AppId.Unset()
}

func (o GetSqlDatabasesQuery) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSqlDatabasesQuery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AppId.IsSet() {
		toSerialize["appId"] = o.AppId.Get()
	}
	return toSerialize, nil
}

type NullableGetSqlDatabasesQuery struct {
	value *GetSqlDatabasesQuery
	isSet bool
}

func (v NullableGetSqlDatabasesQuery) Get() *GetSqlDatabasesQuery {
	return v.value
}

func (v *NullableGetSqlDatabasesQuery) Set(val *GetSqlDatabasesQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSqlDatabasesQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSqlDatabasesQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSqlDatabasesQuery(val *GetSqlDatabasesQuery) *NullableGetSqlDatabasesQuery {
	return &NullableGetSqlDatabasesQuery{value: val, isSet: true}
}

func (v NullableGetSqlDatabasesQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSqlDatabasesQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


