/*
Fermyon Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_openapi

import (
	"encoding/json"
)

// checks if the CreateSupportTicketCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSupportTicketCommand{}

// CreateSupportTicketCommand struct for CreateSupportTicketCommand
type CreateSupportTicketCommand struct {
	Category TicketCategory `json:"category"`
	Details *string `json:"details,omitempty"`
}

// NewCreateSupportTicketCommand instantiates a new CreateSupportTicketCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSupportTicketCommand(category TicketCategory) *CreateSupportTicketCommand {
	this := CreateSupportTicketCommand{}
	this.Category = category
	return &this
}

// NewCreateSupportTicketCommandWithDefaults instantiates a new CreateSupportTicketCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSupportTicketCommandWithDefaults() *CreateSupportTicketCommand {
	this := CreateSupportTicketCommand{}
	return &this
}

// GetCategory returns the Category field value
func (o *CreateSupportTicketCommand) GetCategory() TicketCategory {
	if o == nil {
		var ret TicketCategory
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *CreateSupportTicketCommand) GetCategoryOk() (*TicketCategory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *CreateSupportTicketCommand) SetCategory(v TicketCategory) {
	o.Category = v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *CreateSupportTicketCommand) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSupportTicketCommand) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *CreateSupportTicketCommand) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *CreateSupportTicketCommand) SetDetails(v string) {
	o.Details = &v
}

func (o CreateSupportTicketCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSupportTicketCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["category"] = o.Category
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	return toSerialize, nil
}

type NullableCreateSupportTicketCommand struct {
	value *CreateSupportTicketCommand
	isSet bool
}

func (v NullableCreateSupportTicketCommand) Get() *CreateSupportTicketCommand {
	return v.value
}

func (v *NullableCreateSupportTicketCommand) Set(val *CreateSupportTicketCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSupportTicketCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSupportTicketCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSupportTicketCommand(val *CreateSupportTicketCommand) *NullableCreateSupportTicketCommand {
	return &NullableCreateSupportTicketCommand{value: val, isSet: true}
}

func (v NullableCreateSupportTicketCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSupportTicketCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


