/*
Fermyon Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_openapi

import (
	"encoding/json"
)

// checks if the DeviceCodeItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeviceCodeItem{}

// DeviceCodeItem struct for DeviceCodeItem
type DeviceCodeItem struct {
	DeviceCode string `json:"deviceCode"`
	UserCode string `json:"userCode"`
	VerificationUrl string `json:"verificationUrl"`
	ExpiresIn int64 `json:"expiresIn"`
	Interval int32 `json:"interval"`
}

// NewDeviceCodeItem instantiates a new DeviceCodeItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceCodeItem(deviceCode string, userCode string, verificationUrl string, expiresIn int64, interval int32) *DeviceCodeItem {
	this := DeviceCodeItem{}
	this.DeviceCode = deviceCode
	this.UserCode = userCode
	this.VerificationUrl = verificationUrl
	this.ExpiresIn = expiresIn
	this.Interval = interval
	return &this
}

// NewDeviceCodeItemWithDefaults instantiates a new DeviceCodeItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceCodeItemWithDefaults() *DeviceCodeItem {
	this := DeviceCodeItem{}
	return &this
}

// GetDeviceCode returns the DeviceCode field value
func (o *DeviceCodeItem) GetDeviceCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceCode
}

// GetDeviceCodeOk returns a tuple with the DeviceCode field value
// and a boolean to check if the value has been set.
func (o *DeviceCodeItem) GetDeviceCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceCode, true
}

// SetDeviceCode sets field value
func (o *DeviceCodeItem) SetDeviceCode(v string) {
	o.DeviceCode = v
}

// GetUserCode returns the UserCode field value
func (o *DeviceCodeItem) GetUserCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserCode
}

// GetUserCodeOk returns a tuple with the UserCode field value
// and a boolean to check if the value has been set.
func (o *DeviceCodeItem) GetUserCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserCode, true
}

// SetUserCode sets field value
func (o *DeviceCodeItem) SetUserCode(v string) {
	o.UserCode = v
}

// GetVerificationUrl returns the VerificationUrl field value
func (o *DeviceCodeItem) GetVerificationUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VerificationUrl
}

// GetVerificationUrlOk returns a tuple with the VerificationUrl field value
// and a boolean to check if the value has been set.
func (o *DeviceCodeItem) GetVerificationUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerificationUrl, true
}

// SetVerificationUrl sets field value
func (o *DeviceCodeItem) SetVerificationUrl(v string) {
	o.VerificationUrl = v
}

// GetExpiresIn returns the ExpiresIn field value
func (o *DeviceCodeItem) GetExpiresIn() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value
// and a boolean to check if the value has been set.
func (o *DeviceCodeItem) GetExpiresInOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresIn, true
}

// SetExpiresIn sets field value
func (o *DeviceCodeItem) SetExpiresIn(v int64) {
	o.ExpiresIn = v
}

// GetInterval returns the Interval field value
func (o *DeviceCodeItem) GetInterval() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value
// and a boolean to check if the value has been set.
func (o *DeviceCodeItem) GetIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interval, true
}

// SetInterval sets field value
func (o *DeviceCodeItem) SetInterval(v int32) {
	o.Interval = v
}

func (o DeviceCodeItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeviceCodeItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deviceCode"] = o.DeviceCode
	toSerialize["userCode"] = o.UserCode
	toSerialize["verificationUrl"] = o.VerificationUrl
	toSerialize["expiresIn"] = o.ExpiresIn
	toSerialize["interval"] = o.Interval
	return toSerialize, nil
}

type NullableDeviceCodeItem struct {
	value *DeviceCodeItem
	isSet bool
}

func (v NullableDeviceCodeItem) Get() *DeviceCodeItem {
	return v.value
}

func (v *NullableDeviceCodeItem) Set(val *DeviceCodeItem) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceCodeItem) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceCodeItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceCodeItem(val *DeviceCodeItem) *NullableDeviceCodeItem {
	return &NullableDeviceCodeItem{value: val, isSet: true}
}

func (v NullableDeviceCodeItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceCodeItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


