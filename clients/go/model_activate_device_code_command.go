/*
Fermyon Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_openapi

import (
	"encoding/json"
)

// checks if the ActivateDeviceCodeCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivateDeviceCodeCommand{}

// ActivateDeviceCodeCommand struct for ActivateDeviceCodeCommand
type ActivateDeviceCodeCommand struct {
	UserCode string `json:"userCode"`
}

// NewActivateDeviceCodeCommand instantiates a new ActivateDeviceCodeCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivateDeviceCodeCommand(userCode string) *ActivateDeviceCodeCommand {
	this := ActivateDeviceCodeCommand{}
	this.UserCode = userCode
	return &this
}

// NewActivateDeviceCodeCommandWithDefaults instantiates a new ActivateDeviceCodeCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivateDeviceCodeCommandWithDefaults() *ActivateDeviceCodeCommand {
	this := ActivateDeviceCodeCommand{}
	return &this
}

// GetUserCode returns the UserCode field value
func (o *ActivateDeviceCodeCommand) GetUserCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserCode
}

// GetUserCodeOk returns a tuple with the UserCode field value
// and a boolean to check if the value has been set.
func (o *ActivateDeviceCodeCommand) GetUserCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserCode, true
}

// SetUserCode sets field value
func (o *ActivateDeviceCodeCommand) SetUserCode(v string) {
	o.UserCode = v
}

func (o ActivateDeviceCodeCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivateDeviceCodeCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userCode"] = o.UserCode
	return toSerialize, nil
}

type NullableActivateDeviceCodeCommand struct {
	value *ActivateDeviceCodeCommand
	isSet bool
}

func (v NullableActivateDeviceCodeCommand) Get() *ActivateDeviceCodeCommand {
	return v.value
}

func (v *NullableActivateDeviceCodeCommand) Set(val *ActivateDeviceCodeCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableActivateDeviceCodeCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableActivateDeviceCodeCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivateDeviceCodeCommand(val *ActivateDeviceCodeCommand) *NullableActivateDeviceCodeCommand {
	return &NullableActivateDeviceCodeCommand{value: val, isSet: true}
}

func (v NullableActivateDeviceCodeCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivateDeviceCodeCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


