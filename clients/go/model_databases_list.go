/*
Fermyon Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_openapi

import (
	"encoding/json"
)

// checks if the DatabasesList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatabasesList{}

// DatabasesList struct for DatabasesList
type DatabasesList struct {
	Databases []Database `json:"databases"`
}

// NewDatabasesList instantiates a new DatabasesList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatabasesList(databases []Database) *DatabasesList {
	this := DatabasesList{}
	this.Databases = databases
	return &this
}

// NewDatabasesListWithDefaults instantiates a new DatabasesList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatabasesListWithDefaults() *DatabasesList {
	this := DatabasesList{}
	return &this
}

// GetDatabases returns the Databases field value
func (o *DatabasesList) GetDatabases() []Database {
	if o == nil {
		var ret []Database
		return ret
	}

	return o.Databases
}

// GetDatabasesOk returns a tuple with the Databases field value
// and a boolean to check if the value has been set.
func (o *DatabasesList) GetDatabasesOk() ([]Database, bool) {
	if o == nil {
		return nil, false
	}
	return o.Databases, true
}

// SetDatabases sets field value
func (o *DatabasesList) SetDatabases(v []Database) {
	o.Databases = v
}

func (o DatabasesList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatabasesList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["databases"] = o.Databases
	return toSerialize, nil
}

type NullableDatabasesList struct {
	value *DatabasesList
	isSet bool
}

func (v NullableDatabasesList) Get() *DatabasesList {
	return v.value
}

func (v *NullableDatabasesList) Set(val *DatabasesList) {
	v.value = val
	v.isSet = true
}

func (v NullableDatabasesList) IsSet() bool {
	return v.isSet
}

func (v *NullableDatabasesList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatabasesList(val *DatabasesList) *NullableDatabasesList {
	return &NullableDatabasesList{value: val, isSet: true}
}

func (v NullableDatabasesList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatabasesList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


