/*
Fermyon Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_openapi

import (
	"encoding/json"
)

// checks if the CreateAppCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAppCommand{}

// CreateAppCommand struct for CreateAppCommand
type CreateAppCommand struct {
	Name string `json:"name"`
	StorageId string `json:"storageId"`
	CreateDefaultDatabase *bool `json:"createDefaultDatabase,omitempty"`
}

// NewCreateAppCommand instantiates a new CreateAppCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAppCommand(name string, storageId string) *CreateAppCommand {
	this := CreateAppCommand{}
	this.Name = name
	this.StorageId = storageId
	return &this
}

// NewCreateAppCommandWithDefaults instantiates a new CreateAppCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAppCommandWithDefaults() *CreateAppCommand {
	this := CreateAppCommand{}
	return &this
}

// GetName returns the Name field value
func (o *CreateAppCommand) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateAppCommand) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateAppCommand) SetName(v string) {
	o.Name = v
}

// GetStorageId returns the StorageId field value
func (o *CreateAppCommand) GetStorageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StorageId
}

// GetStorageIdOk returns a tuple with the StorageId field value
// and a boolean to check if the value has been set.
func (o *CreateAppCommand) GetStorageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageId, true
}

// SetStorageId sets field value
func (o *CreateAppCommand) SetStorageId(v string) {
	o.StorageId = v
}

// GetCreateDefaultDatabase returns the CreateDefaultDatabase field value if set, zero value otherwise.
func (o *CreateAppCommand) GetCreateDefaultDatabase() bool {
	if o == nil || IsNil(o.CreateDefaultDatabase) {
		var ret bool
		return ret
	}
	return *o.CreateDefaultDatabase
}

// GetCreateDefaultDatabaseOk returns a tuple with the CreateDefaultDatabase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAppCommand) GetCreateDefaultDatabaseOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateDefaultDatabase) {
		return nil, false
	}
	return o.CreateDefaultDatabase, true
}

// HasCreateDefaultDatabase returns a boolean if a field has been set.
func (o *CreateAppCommand) HasCreateDefaultDatabase() bool {
	if o != nil && !IsNil(o.CreateDefaultDatabase) {
		return true
	}

	return false
}

// SetCreateDefaultDatabase gets a reference to the given bool and assigns it to the CreateDefaultDatabase field.
func (o *CreateAppCommand) SetCreateDefaultDatabase(v bool) {
	o.CreateDefaultDatabase = &v
}

func (o CreateAppCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAppCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["storageId"] = o.StorageId
	if !IsNil(o.CreateDefaultDatabase) {
		toSerialize["createDefaultDatabase"] = o.CreateDefaultDatabase
	}
	return toSerialize, nil
}

type NullableCreateAppCommand struct {
	value *CreateAppCommand
	isSet bool
}

func (v NullableCreateAppCommand) Get() *CreateAppCommand {
	return v.value
}

func (v *NullableCreateAppCommand) Set(val *CreateAppCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAppCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAppCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAppCommand(val *CreateAppCommand) *NullableCreateAppCommand {
	return &NullableCreateAppCommand{value: val, isSet: true}
}

func (v NullableCreateAppCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAppCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


