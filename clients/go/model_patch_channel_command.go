/*
Fermyon Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_openapi

import (
	"encoding/json"
)

// checks if the PatchChannelCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchChannelCommand{}

// PatchChannelCommand struct for PatchChannelCommand
type PatchChannelCommand struct {
	ChannelId *string `json:"channelId,omitempty"`
	Name *StringField `json:"name,omitempty"`
	Domain *StringField `json:"domain,omitempty"`
	RevisionSelectionStrategy *ChannelRevisionSelectionStrategyField `json:"revisionSelectionStrategy,omitempty"`
	RangeRule *StringField `json:"rangeRule,omitempty"`
	ActiveRevisionId *GuidNullableField `json:"activeRevisionId,omitempty"`
}

// NewPatchChannelCommand instantiates a new PatchChannelCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchChannelCommand() *PatchChannelCommand {
	this := PatchChannelCommand{}
	return &this
}

// NewPatchChannelCommandWithDefaults instantiates a new PatchChannelCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchChannelCommandWithDefaults() *PatchChannelCommand {
	this := PatchChannelCommand{}
	return &this
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *PatchChannelCommand) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId) {
		var ret string
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchChannelCommand) GetChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *PatchChannelCommand) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given string and assigns it to the ChannelId field.
func (o *PatchChannelCommand) SetChannelId(v string) {
	o.ChannelId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchChannelCommand) GetName() StringField {
	if o == nil || IsNil(o.Name) {
		var ret StringField
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchChannelCommand) GetNameOk() (*StringField, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchChannelCommand) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given StringField and assigns it to the Name field.
func (o *PatchChannelCommand) SetName(v StringField) {
	o.Name = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *PatchChannelCommand) GetDomain() StringField {
	if o == nil || IsNil(o.Domain) {
		var ret StringField
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchChannelCommand) GetDomainOk() (*StringField, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *PatchChannelCommand) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given StringField and assigns it to the Domain field.
func (o *PatchChannelCommand) SetDomain(v StringField) {
	o.Domain = &v
}

// GetRevisionSelectionStrategy returns the RevisionSelectionStrategy field value if set, zero value otherwise.
func (o *PatchChannelCommand) GetRevisionSelectionStrategy() ChannelRevisionSelectionStrategyField {
	if o == nil || IsNil(o.RevisionSelectionStrategy) {
		var ret ChannelRevisionSelectionStrategyField
		return ret
	}
	return *o.RevisionSelectionStrategy
}

// GetRevisionSelectionStrategyOk returns a tuple with the RevisionSelectionStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchChannelCommand) GetRevisionSelectionStrategyOk() (*ChannelRevisionSelectionStrategyField, bool) {
	if o == nil || IsNil(o.RevisionSelectionStrategy) {
		return nil, false
	}
	return o.RevisionSelectionStrategy, true
}

// HasRevisionSelectionStrategy returns a boolean if a field has been set.
func (o *PatchChannelCommand) HasRevisionSelectionStrategy() bool {
	if o != nil && !IsNil(o.RevisionSelectionStrategy) {
		return true
	}

	return false
}

// SetRevisionSelectionStrategy gets a reference to the given ChannelRevisionSelectionStrategyField and assigns it to the RevisionSelectionStrategy field.
func (o *PatchChannelCommand) SetRevisionSelectionStrategy(v ChannelRevisionSelectionStrategyField) {
	o.RevisionSelectionStrategy = &v
}

// GetRangeRule returns the RangeRule field value if set, zero value otherwise.
func (o *PatchChannelCommand) GetRangeRule() StringField {
	if o == nil || IsNil(o.RangeRule) {
		var ret StringField
		return ret
	}
	return *o.RangeRule
}

// GetRangeRuleOk returns a tuple with the RangeRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchChannelCommand) GetRangeRuleOk() (*StringField, bool) {
	if o == nil || IsNil(o.RangeRule) {
		return nil, false
	}
	return o.RangeRule, true
}

// HasRangeRule returns a boolean if a field has been set.
func (o *PatchChannelCommand) HasRangeRule() bool {
	if o != nil && !IsNil(o.RangeRule) {
		return true
	}

	return false
}

// SetRangeRule gets a reference to the given StringField and assigns it to the RangeRule field.
func (o *PatchChannelCommand) SetRangeRule(v StringField) {
	o.RangeRule = &v
}

// GetActiveRevisionId returns the ActiveRevisionId field value if set, zero value otherwise.
func (o *PatchChannelCommand) GetActiveRevisionId() GuidNullableField {
	if o == nil || IsNil(o.ActiveRevisionId) {
		var ret GuidNullableField
		return ret
	}
	return *o.ActiveRevisionId
}

// GetActiveRevisionIdOk returns a tuple with the ActiveRevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchChannelCommand) GetActiveRevisionIdOk() (*GuidNullableField, bool) {
	if o == nil || IsNil(o.ActiveRevisionId) {
		return nil, false
	}
	return o.ActiveRevisionId, true
}

// HasActiveRevisionId returns a boolean if a field has been set.
func (o *PatchChannelCommand) HasActiveRevisionId() bool {
	if o != nil && !IsNil(o.ActiveRevisionId) {
		return true
	}

	return false
}

// SetActiveRevisionId gets a reference to the given GuidNullableField and assigns it to the ActiveRevisionId field.
func (o *PatchChannelCommand) SetActiveRevisionId(v GuidNullableField) {
	o.ActiveRevisionId = &v
}

func (o PatchChannelCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchChannelCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChannelId) {
		toSerialize["channelId"] = o.ChannelId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.RevisionSelectionStrategy) {
		toSerialize["revisionSelectionStrategy"] = o.RevisionSelectionStrategy
	}
	if !IsNil(o.RangeRule) {
		toSerialize["rangeRule"] = o.RangeRule
	}
	if !IsNil(o.ActiveRevisionId) {
		toSerialize["activeRevisionId"] = o.ActiveRevisionId
	}
	return toSerialize, nil
}

type NullablePatchChannelCommand struct {
	value *PatchChannelCommand
	isSet bool
}

func (v NullablePatchChannelCommand) Get() *PatchChannelCommand {
	return v.value
}

func (v *NullablePatchChannelCommand) Set(val *PatchChannelCommand) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchChannelCommand) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchChannelCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchChannelCommand(val *PatchChannelCommand) *NullablePatchChannelCommand {
	return &NullablePatchChannelCommand{value: val, isSet: true}
}

func (v NullablePatchChannelCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchChannelCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


