/*
Fermyon Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_openapi

import (
	"encoding/json"
)

// checks if the DeleteVariablePairCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteVariablePairCommand{}

// DeleteVariablePairCommand struct for DeleteVariablePairCommand
type DeleteVariablePairCommand struct {
	AppId string `json:"appId"`
	Variable string `json:"variable"`
}

// NewDeleteVariablePairCommand instantiates a new DeleteVariablePairCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteVariablePairCommand(appId string, variable string) *DeleteVariablePairCommand {
	this := DeleteVariablePairCommand{}
	this.AppId = appId
	this.Variable = variable
	return &this
}

// NewDeleteVariablePairCommandWithDefaults instantiates a new DeleteVariablePairCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteVariablePairCommandWithDefaults() *DeleteVariablePairCommand {
	this := DeleteVariablePairCommand{}
	return &this
}

// GetAppId returns the AppId field value
func (o *DeleteVariablePairCommand) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *DeleteVariablePairCommand) GetAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *DeleteVariablePairCommand) SetAppId(v string) {
	o.AppId = v
}

// GetVariable returns the Variable field value
func (o *DeleteVariablePairCommand) GetVariable() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Variable
}

// GetVariableOk returns a tuple with the Variable field value
// and a boolean to check if the value has been set.
func (o *DeleteVariablePairCommand) GetVariableOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Variable, true
}

// SetVariable sets field value
func (o *DeleteVariablePairCommand) SetVariable(v string) {
	o.Variable = v
}

func (o DeleteVariablePairCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteVariablePairCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["appId"] = o.AppId
	toSerialize["variable"] = o.Variable
	return toSerialize, nil
}

type NullableDeleteVariablePairCommand struct {
	value *DeleteVariablePairCommand
	isSet bool
}

func (v NullableDeleteVariablePairCommand) Get() *DeleteVariablePairCommand {
	return v.value
}

func (v *NullableDeleteVariablePairCommand) Set(val *DeleteVariablePairCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteVariablePairCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteVariablePairCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteVariablePairCommand(val *DeleteVariablePairCommand) *NullableDeleteVariablePairCommand {
	return &NullableDeleteVariablePairCommand{value: val, isSet: true}
}

func (v NullableDeleteVariablePairCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteVariablePairCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


