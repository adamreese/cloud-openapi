/*
Fermyon Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloud_openapi

import (
	"encoding/json"
)

// checks if the CreateKeyValuePairCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateKeyValuePairCommand{}

// CreateKeyValuePairCommand struct for CreateKeyValuePairCommand
type CreateKeyValuePairCommand struct {
	AppId string `json:"appId"`
	StoreName string `json:"storeName"`
	Key string `json:"key"`
	Value string `json:"value"`
}

// NewCreateKeyValuePairCommand instantiates a new CreateKeyValuePairCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateKeyValuePairCommand(appId string, storeName string, key string, value string) *CreateKeyValuePairCommand {
	this := CreateKeyValuePairCommand{}
	this.AppId = appId
	this.StoreName = storeName
	this.Key = key
	this.Value = value
	return &this
}

// NewCreateKeyValuePairCommandWithDefaults instantiates a new CreateKeyValuePairCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateKeyValuePairCommandWithDefaults() *CreateKeyValuePairCommand {
	this := CreateKeyValuePairCommand{}
	return &this
}

// GetAppId returns the AppId field value
func (o *CreateKeyValuePairCommand) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *CreateKeyValuePairCommand) GetAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *CreateKeyValuePairCommand) SetAppId(v string) {
	o.AppId = v
}

// GetStoreName returns the StoreName field value
func (o *CreateKeyValuePairCommand) GetStoreName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StoreName
}

// GetStoreNameOk returns a tuple with the StoreName field value
// and a boolean to check if the value has been set.
func (o *CreateKeyValuePairCommand) GetStoreNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StoreName, true
}

// SetStoreName sets field value
func (o *CreateKeyValuePairCommand) SetStoreName(v string) {
	o.StoreName = v
}

// GetKey returns the Key field value
func (o *CreateKeyValuePairCommand) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *CreateKeyValuePairCommand) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *CreateKeyValuePairCommand) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *CreateKeyValuePairCommand) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *CreateKeyValuePairCommand) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *CreateKeyValuePairCommand) SetValue(v string) {
	o.Value = v
}

func (o CreateKeyValuePairCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateKeyValuePairCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["appId"] = o.AppId
	toSerialize["storeName"] = o.StoreName
	toSerialize["key"] = o.Key
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableCreateKeyValuePairCommand struct {
	value *CreateKeyValuePairCommand
	isSet bool
}

func (v NullableCreateKeyValuePairCommand) Get() *CreateKeyValuePairCommand {
	return v.value
}

func (v *NullableCreateKeyValuePairCommand) Set(val *CreateKeyValuePairCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateKeyValuePairCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateKeyValuePairCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateKeyValuePairCommand(val *CreateKeyValuePairCommand) *NullableCreateKeyValuePairCommand {
	return &NullableCreateKeyValuePairCommand{value: val, isSet: true}
}

func (v NullableCreateKeyValuePairCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateKeyValuePairCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


