/*
 * Fermyon.Cloud.Web
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AppRequestCount {
    #[serde(rename = "start", skip_serializing_if = "Option::is_none")]
    pub start: Option<i64>,
    #[serde(rename = "end", skip_serializing_if = "Option::is_none")]
    pub end: Option<i64>,
    #[serde(rename = "interval", skip_serializing_if = "Option::is_none")]
    pub interval: Option<i32>,
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<f32>,
    #[serde(rename = "averagePerSecond", skip_serializing_if = "Option::is_none")]
    pub average_per_second: Option<f32>,
    #[serde(rename = "points", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub points: Option<Option<Vec<crate::models::AppRequestPoint>>>,
}

impl AppRequestCount {
    pub fn new() -> AppRequestCount {
        AppRequestCount {
            start: None,
            end: None,
            interval: None,
            total: None,
            average_per_second: None,
            points: None,
        }
    }
}


